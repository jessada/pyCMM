import argparse
import sys
from argparse import RawTextHelpFormatter
from pycmm.app.db import app_pycmm_dbms_create_jobs_setup_file
from pycmm.settings import DFLT_JOB_ALLOC_TIME
from pycmm.settings import DBMS_CREATE_JOB_SETUP_FILE_DESCRIPTION

argp = argparse.ArgumentParser(description=DBMS_CREATE_JOB_SETUP_FILE_DESCRIPTION,
                               formatter_class=RawTextHelpFormatter,
                               )
db_group = argp.add_argument_group('dbms arguments')
argp.add_argument('-d',
                  dest='project_name',
                  metavar="PROJECT_NAME",
                  help='name of this dataset. This will be the name of the merged vcf file',
                  required=True,
                  )
argp.add_argument('-O',
                  dest='project_out_dir',
                  metavar="OUTPUT_DIR",
                  help='a folder to keep all the running results, including log and intermediate files',
                  required=True,
                  )
argp.add_argument('-s',
                  dest='sample_info',
                  metavar="SAMPLE_INFOS",
                  help='sample information',
                  default=None,
                  )
argp.add_argument('-p',
                  dest='project_code',
                  metavar="PROJECT_CODE",
                  help='UPPMAX project code',
                  default=None,
                  )
help = 'UPPMAX allocation time (default: {dflt_val})'.format(dflt_val=DFLT_JOB_ALLOC_TIME)
argp.add_argument('--job_alloc_time',
                  dest='job_alloc_time',
                  metavar="ALLOC_TIME",
                  help=help,
                  default=DFLT_JOB_ALLOC_TIME,
                  )
db_group.add_argument('--db_file',
                      dest='db_file',
                      metavar="FILE",
                      help='SQLite database file',
                      required=True,
                      )
db_group.add_argument('--db_jobs',
                      dest='db_jobs',
                      metavar="JOBS",
                      help='database job description',
                      default=None,
                      )
argp.add_argument('-o',
                  dest='out_jobs_setup_file',
                  metavar="JOBS_SETUP_FILE",
                  help='a file containing jobs configuration',
                  default=sys.stdout,
                  )
args = argp.parse_args()
app_pycmm_dbms_create_jobs_setup_file(project_name=args.project_name,
                                      project_out_dir=args.project_out_dir,
                                      sample_info=args.sample_info,
                                      project_code=args.project_code,
                                      job_alloc_time=args.job_alloc_time,
                                      db_file=args.db_file,
                                      db_jobs=args.db_jobs,
                                      out_jobs_setup_file=args.out_jobs_setup_file,
                                      )

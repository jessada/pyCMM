import argparse
import sys
from pycmm import settings
from pycmm.app.gatkbp import app_pycmm_create_jobs_setup_file
from collections import OrderedDict

argp = argparse.ArgumentParser(description=settings.CREATE_JOB_SETUP_FILE_DESCRIPTION)
argp.add_argument('-d',
                  dest='dataset_name',
                  metavar="DATASET NAME",
                  help='name of this dataset. This will be the name of the merged vcf file',
                  required=True,
                  )
argp.add_argument('-g',
                  dest='sample_group',
                  metavar="SAMPLE GROUP",
                  help='name of sample group, this will appear in bam files',
                  required=True,
                  )
argp.add_argument('-p',
                  dest='project_code',
                  metavar="PROJECT CODE",
                  help='UPPMAX project code',
                  required=True,
                  )
argp.add_argument('-R',
                  dest='reference_file',
                  metavar="REFERENCE FILE",
                  help='reference file',
                  required=True,
                  )
argp.add_argument('-O',
                  dest='project_out_dir',
                  metavar="OUTPUT DIR",
                  help='a folder to keep all the running results, including log and intermediate files',
                  required=True,
                  )
argp.add_argument('-I',
                  dest='samples_root_dir',
                  metavar="SAMPLES DIR",
                  help='a folder where the fastq files of each sample are kept',
                  required=True,
                  )
argp.add_argument('--known_indels',
                  dest='known_indels_file',
                  metavar="KNOWN INDELS",
                  help='known indels files',
                  nargs='*',
                  default=None,
                  )
argp.add_argument('--dbsnp',
                  dest='dbsnp_file',
                  metavar="DBSNP",
                  help='dbsnp file',
                  default=None,
                  )
argp.add_argument('--variants_calling',
                  dest='variants_calling',
                  metavar="VARIANTS CALLING",
                  help="indicated if variants calling for this dataset need to be done",
                  nargs='?',
                  const="YES",
                  default="NO",
                  )
argp.add_argument('--targets_interval_list',
                  dest='targets_interval_list',
                  metavar="TARGETS INTERVAL",
                  help="a file with list of targets interval",
                  default=None,
                  )
argp.add_argument('-o',
                  dest='out_jobs_setup_file',
                  metavar="JOBS SETUP FILE",
                  help='a file containing jobs configuration',
                  default=sys.stdout,
                  )
args = argp.parse_args()
app_pycmm_create_jobs_setup_file(dataset_name=args.dataset_name,
                                 sample_group=args.sample_group,
                                 project_code=args.project_code,
                                 reference_file=args.reference_file,
                                 project_out_dir=args.project_out_dir,
                                 samples_root_dir=args.samples_root_dir,
                                 known_indels_file=args.known_indels_file,
                                 dbsnp_file=args.dbsnp_file,
                                 variants_calling=args.variants_calling,
                                 targets_interval_list=args.targets_interval_list,
                                 out_jobs_setup_file=args.out_jobs_setup_file,
                                 )
